pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- raiot
-- by daniil ivzhenko


function _init()
--variables

	game_state="menu"
	
	plr={
		--looks
		sp=3,
		x=9*8,
		y=23.5*8,
		h=8,
		w=8,
		flp=false,
		
		--motion
		dx=0,
		dy=0,
		max_dx=5,
		max_dy=8,
		acc=0.5,
		boost=3.5,
		anim=0,
		
		--plr status
		running=false,
		jumping=false,
		falling=false,
		sliding=false,
		landed=false,
		
		--keys
		keys=10,
		
	}
		
	--key table
	key={
		anim=time(),
		sp=18,
		x=80/8,
		y=430/8,
		flp=false,
		
		
  keys = {
  		--start
    {x=10,y=52,collected=false},
   	--haunted city
    {x=52,y=51,collected=false},	
    --sand wizard
    {x=50,y=21,collected=false},	
   	--mushroom wizard 1
    {x=10,y=22,collected=false},	
   	--mushroom wizard 2
    {x=52,y=14,collected=false},	
   	--hidden key
    {x=17,y=34,collected=false},	
		}
	}
		
	--mushroom wizard table
	wzrd={
		anim=time(),
		sp=31,
	}
	--sand wizard table
	snd_wzrd={
		sp=222,
	}
	--ice wizard table
	ice_wzrd={
		sp=14,
	}
	--haunt wizard table
	haunt_wzrd={
		sp=12,
	}
	
	--sparkle table
	sparkle={
		anim=time(),
		flp=false,
	}
	--sand table
	snd={
		anim=time(),
	 y=0,
		n=0,
	}
	--snow table
	snow={
		sp=56,
		anim=time(),
		x=17*8,
	 y=9*8,
		n=0,
	}
	
	--screen shake table
	shake={ 
		duration=0, 
		magnitude=1,
		anim=0 
	}

	
	--forces
	gravity=0.3
	friction=0.85
	
	--simple camera
	cam_x=0
	cam_y=0
	
	--map limits
	map_start=0
	map_end=448
	map_top=48
	
	menu={
		bg={
			anim=time(),
			--background patterns
			sp=12,
			x=(-4*8)+1,
			y=(-4*8)+1,
			x1=(-3*8)+1,
			y1=(-3*8)+1,
			n=0,
			z=0,
			--press q to start
			q=true,
			qy=68,
			qn=0,
			qm=0,
		},
	}
	
end
-->8
--update  draw  camera

function _update()
	if game_state=="menu" then
		update_menu()
	elseif game_state=="game" then
		update_game()
	elseif game_state=="end" then
		update_end()
	end
end


function update_menu()
	animate_menu_bg()	
	wzrd_animate()
	if btnp(❎) or btnp(🅾️) then
		do_shake(10,10)
		game_state="game"
	end
end


function update_game()
	
	key_animate()
	plr_update()
	plr_animate()
	wzrd_animate()
	snd_animate()
	sparkle_animate()
	snow_animate()

  --simple camera
  cam_x=plr.x-64+(plr.w/2)
  cam_y=plr.y-64+(plr.h/2)
  if cam_x<map_start then
     cam_x=map_start
  end
  if cam_x>map_end-128 then
     cam_x=map_end-128
  end
  if cam_y>map_end-64 then
     cam_y=map_end-64
  end
  if cam_y<map_top+8 and cam_y>0 and cam_x>9*8 then
  			cam_y=map_top+8
  end
  if cam_y<0 then
     cam_y=map_top-119+16
  end
  if flr(cam_y)==0 then
     sfx(4)
  end
  camera(cam_x,cam_y)
  
 	-- listen to screen shake
  check_shake()

  --off map fix
  if plr.y>448+128 then
  	plr.y=390
  	plr.x=40  
  end
end


function update_end()

end


-----------------------------------------------------------

function _draw()
  cls(0)
  if game_state=="menu" then
			draw_menu()
		elseif game_state=="game" then
			draw_game()
		elseif game_state=="end" then
			draw_end()
		end
end

function draw_sky()

 --sky
	rectfill(0,-128,448,48,12)
	line    (448,-78,0,-62,7)
	line    (448,-58,0,-42,7)
	line    (448,-28,0,-12,7)
	
	--glare
	line(40,48,117,111,12)
	line(45,48,115,95,12)
	line(55,48,130,90,12)
	line(43,48,104,128,12)
	line(44,48,82,144,12)
	
	--sun
	circ    (0,-60,78,10)
	circfill(0,-60,77,12)
	circfill(0,-60,55,10)
	circfill(0,-60,52,9)
	circfill(0,-60,50,12)
	circfill(0,-60,40,10)
	circfill(0,-60,35,7)
	circfill(0,-60,28,10)
	circfill(0,-60,20,9)
	
	--cloud 1
	rectfill(45,-30,125,-19,6)
	circfill(5.9*8,-27,8,6)
	circfill(15.9*8,-27,8,6)
	circfill(8*8,-32,16,6)
	circfill(14*8,-32,13,6)
	circfill(10.8*8,-35,19,6)
	circfill(13.8*8,-32,15.7,6)
	--
	rectfill(45,-30,125,-20,7)
	circfill(45,-27,7,7)
	circfill(127,-27,7,7)
	circfill(65,-32,15,7)
	circfill(111,-32,12,7)
	circfill(87,-35,18,7)
	circfill(111,-32,14,7)
	
	
	--cloud 2
	rectfill(125,-65,205,-55,7)
	
	
	--cloud 3
	circfill(24*8,-37,7,6)
	circfill(35*8,-37,7,6)
	circfill(27*8,-42,15,6)
	circfill(33*8,-42,12,6)
	circfill(30*8,-45,18,6)
	circfill(33*8,-42,14,6)
	--
	rectfill(195,-40,275,-30,7)
	circfill(195,-37,7,7)
	circfill(277,-37,7,7)
	circfill(215,-42,15,7)
	circfill(261,-42,12,7)
	circfill(237,-45,18,7)
	circfill(261,-42,14,7)
	
	
	--house
	for i=0,7 do
		spr(34,(i+29)*8,-1*8)
	end
	spr(33,28*8,-1*8)
	rectfill((24*8)+1,(3*8)+3,(30*8)-2,6*8,2)
	
	
	--skeleton mouth
	rectfill(448-(11*8),0+(1*8),448,48,0)
	rectfill(448-(10*8),0+(-2*8),448,48,0)
	rectfill(448-(9*8),0+(-5*8),448,48,0)
	rectfill(448-(8*8),0+(-6*8),448,48,0)
	rectfill(448-(6*8),0+(-7*8),448,48,0)
	--
	for i= 0, 2 do
		spr(58,448-(10*8),0+(-i*8))
		spr(58,448-(9*8),0+((-i-3)*8))
	end
	spr(58,448-(8*8),0+(-9*8))
	spr(58,448-(8*8),0+(-6*8))
	spr(58,448-(6*8),0+(-7*8))
	
	--skeleton forhead
	spr(109, 448-(5*8),0+(-1*8))
	spr(69, 448-(4*8),0+(-1*8))
	spr(66, 448-(3*8),0+(-1*8))
	spr(65, 448-(2*8),0+(-1*8))
	spr(65, 448-(1*8),0+(-1*8))
	
	--skeleton eye
	circfill(448-(3.5*8),4,2,8)
	circfill(448-(3.5*8)-1,4+1,1,9)
	circfill(448-(3.5*8)-1,4+1,0.5,7)
	
	--dark cloud
	rectfill(44.5*8,-43,54*8,-30,6)
	circfill(44.5*8,-37,7,6)
	circfill(55*8,-37,7,13)
	circfill(47*8,-42,15,6)
	circfill(47.2*8,-40,11,13)
	circfill(53*8,-42,12,13)
	circfill(50*8,-45,18,13)
	circfill(53*8,-42,14,13)
end

function draw_wzrds()
		spr(wzrd.sp,10*8,23*8,1,1)
  spr(wzrd.sp,52*8,16*8,1,1,true)
  spr(snd_wzrd.sp,50*8,22*8,1,1)
  spr(ice_wzrd.sp,46*8,10*8,1,1)
  spr(haunt_wzrd.sp,(53*8)+1,46*8,1,1)
  spr(haunt_wzrd.sp,(0.5*8)+1,37*8,1,1,true)
end

function draw_sparkles()
		--sparkles
		spr(56,9*8,22*8,1,1,sparkle.flp)
  spr(56,10*8,20*8,1,1,sparkle.flp)
  spr(56,6*8,28*8,1,1,sparkle.flp)
  spr(56,4*8,31*8,1,1,sparkle.flp)
  spr(56,3*8,27*8,1,1,sparkle.flp)
  spr(56,5*8,22*8,1,1,sparkle.flp)
  
  --sand falling
  for i=0,10 do
  	spr(255,49*8,((23+i)*8)+snd.y,1,1)
  end
  for i=0,3 do
  	spr(255,51*8,((23+i)*8)+snd.y,1,1)
  end
  for i=0,5 do
  	spr(255,54*8,((21+i)*8)+snd.y,1,1)
  end
  for i=0,10 do
  	spr(255,(53*8)-4,((23+i)*8)+snd.y,1,1)
  end
  spr(255,(53*8)-4,(23*8)-1,1,1)
  spr(254,(53*8)-4,(32*8)+2,1,1)
  for i=0,1 do
  	spr(255,52*8,((20+i)*8)+snd.y+2,1,1)
  end
end

function draw_keys()
 for _, k in pairs(key.keys) do
  if not k.collected then
   mset(k.x, k.y, key.sp)
  end
 end
end


function draw_snow()
	for i=0,8 do
		for j=0,21 do
			spr(
			snow.sp,snow.x+((j-1)*8),snow.y+(i*8),1,1)
		end
	end
	for i=0,1 do
		for j=0,10 do
			spr(
			snow.sp,snow.x+((j+23)*8)+1,snow.y+(i)*8,1,1)
		end
	end
	for i=0,1 do
		for j=0,5 do
			spr(
			snow.sp,snow.x+((i+21)*8),snow.y+(j*8),1,1
			)
		end
	end
	for i=0,2 do
		spr(snow.sp,snow.x+(i-2)*8,snow.y+(9)*8,1,1)
	end
	
	rectfill(
	(22)*8,((9+9)*8),((17+21)*8)-5,((9+10)*8)-2,1)
	rectfill(
	(39*8)-4,12*8,(40*8)-2,(15*8)+3,1)
	rectfill(
	(37*8)-4,16*8,(39*8)-10,(19*8)-8,1)
	circfill(36*8,17.9*8,8,1)
	--
	rectfill(14*8,19*8,(17*8)-2,(20*8)-2,1)
	
	for i=0,2 do
		spr(56,(44+i)*8,10*8)
	end
	rectfill(45.5*8,10*8,47.2*8,11*8,1)
end


-->8
--collisions

function collide_map(obj, aim, flag)
	-- local variables initialization
	local x, y, w, h = obj.x, obj.y, obj.w, obj.h
	local x1, y1, x2, y2 = 0, 0, 0, 0
	
	if aim == "left" then
		x1, y1 = x - 1, y
		x2, y2 = x, y + h - 1
	elseif aim == "right" then
		x1, y1 = x + w - 1, y
		x2, y2 = x + w, y + h - 1
	elseif aim == "up" then
		x1, y1 = x + 2, y - 1
		x2, y2 = x + w - 3, y
	elseif aim == "down" then
		x1, y1 = x + 2, y + h
		x2, y2 = x + w - 3, y + h + 1
	end
	
	x1, y1 = flr(x1 / 8), flr(y1 / 8)
	x2, y2 = flr(x2 / 8), flr(y2 / 8)
	
	local tiles = {
		{x=x1, y=y1}, {x=x1, y=y2},
		{x=x2, y=y1}, {x=x2, y=y2}
	}
	
	for _, tile in pairs(tiles) do
		local tx, ty = tile.x, tile.y
		if fget(mget(tx, ty), flag) then
			return true, tx, ty
		end
	end
	
	return false, nil, nil
end


function limit_speed(num,maximum)
  return mid(-maximum,num,maximum)
end
-->8
--plr = player

function plr_update()
		
		--sand physics
		if collide_map(plr,"down",3) then
			friction=0.55
			plr.boost=2.25
		--ice physics
		elseif collide_map(plr,"down",2) then
			friction=1
		--default
		else
			friction=0.85
			gravity=0.3
			plr.boost=3.5
		end
		
		
		--listen to key tiles
		if collide_map(plr,"down",4)
		or collide_map(plr,"right",4)
		or collide_map(plr,"left",4)
		or collide_map(plr,"up",4)
		then
			pick_up_key()
		end


  --physics
  plr.dy += gravity
  plr.dx *= friction
  
  --controls
  if btn(⬅️) then
    plr.dx -= plr.acc
    plr.running = true
    plr.flp = true
  end
  if btn(➡️) then
    plr.dx += plr.acc
    plr.running = true
    plr.flp = false
  end
  
  --slide
  if plr.running
  and not btn(⬅️)
  and not btn(➡️)
  and not plr.falling
  and not plr.jumping then
    plr.running = false
    plr.sliding = true
  end
  
  --jump
  if (btnp(❎) or btnp(⬆️))
  and plr.landed then
    plr.dy -= plr.boost
    plr.landed = false
    plr.jumping = true
  end
  
  --interact with doors
  if btnp(🅾️)
  then
  	open_path()
  
  end
  
  --check for collision up & down
  if plr.dy > 0 then
    plr.falling = true
    plr.landed = false
    plr.jumping = false
    
    plr.dy=limit_speed(plr.dy, plr.max_dy)
    
    if collide_map(plr, "down", 0) then
      plr.landed = true
      plr.falling = false
      plr.dy = 0
      plr.y-=((plr.y+plr.h+2.5)%8)-2.5
    end
  elseif plr.dy < 0 then
    plr.jumping = true  -- here it's fine
    if collide_map(plr, "up", 1) then
      plr.dy = 0
    end
  else
    plr.jumping = false  -- explicitly set this to false when dy is 0
  end
  
  --check collision left & right
  if plr.dx < 0 then
  	
  	 plr.dx=limit_speed(plr.dx, plr.max_dx)
  
    if collide_map(plr, "left", 1) then
      plr.dx = 0
    end
  elseif plr.dx > 0 then
  	
  	 plr.dx=limit_speed(plr.dx, plr.max_dx)
  
    if collide_map(plr, "right", 1) then
      plr.dx = 0
    end
  end

  --stop sliding
  if plr.sliding then
    if abs(plr.dx) < .2
    or plr.running then
      plr.dx = 0
      plr.sliding = false
    end
  end
  
  plr.x += plr.dx
  plr.y += plr.dy
  
  --limit player to map
  if plr.x<map_start then
    plr.x=map_start
  end
  if plr.x>map_end-plr.w then
    plr.x=map_end-plr.w
  end
  
end



-->8
--animations

--animate player
function plr_animate()
  if plr.jumping then
    plr.sp=7
  elseif plr.falling then
    plr.sp=8
  elseif plr.sliding then
    plr.sp=9
  elseif plr.running then
    if time()-plr.anim>.1 then
      plr.anim=time()
      plr.sp+=1
      if plr.sp>6 then
        plr.sp=3
      end
    end
  else --plr idle
    if time()-plr.anim>.3 then
      plr.anim=time()
      plr.sp+=1
      if plr.sp>2 then
        plr.sp=1
      end
    end
  end
end


--animate key
function key_animate()
	
	--animation - not proud of it
	if time()-key.anim>.2 then
	 
	 key.anim=time()
	 
	 if key.sp==20 then
	  key.flp = not key.flp	 
	 elseif key.sp==16 then
	  key.flp = not key.flp
	 end
	 
	 if not key.flp then
	 	key.sp+=1	 
	 else
	 	key.sp-=1
	 end
	 
	end
	
end

--animate wizards! (they are so wise)
function wzrd_animate()
	if time()-wzrd.anim>.6 then
	 wzrd.anim=time()
	 if wzrd.sp==35 then
	  wzrd.sp=51
	  snd_wzrd.sp=222
	  ice_wzrd.sp=14
	  haunt_wzrd.sp=12
	 else
	 	wzrd.sp=35
	 	snd_wzrd.sp=223
  	ice_wzrd.sp=15
  	haunt_wzrd.sp=13
	 end
	end
end

--animate sparkle
function sparkle_animate()
	if time()-sparkle.anim>(0.8-rnd(0.6)) then
		 sparkle.anim=time()
	 	sparkle.flp = not sparkle.flp
	end	
end


--animate sand
function snd_animate()
	if time()-snd.anim>.07 then
		 snd.anim=time()
	 	snd.n+=1
	 	
			if snd.n<=7 then
				snd.y+=1
			else
				snd.y-=7
				snd.n=0
			end
	end	
end

--animate snow
function snow_animate()
	if time()-snow.anim>rnd(.05)+.03 then
		 snow.anim=time()
	 	snow.n+=1
	 	
			if snow.n<=7 then
				snow.x-=1
				snow.y+=1
			else
				snow.x+=7
				snow.y-=7
				snow.n=0
			end
	end	
end

function animate_menu_bg()
	if time()-menu.bg.anim>.03 then
		menu.bg.anim=time()
	 menu.bg.n+=1
		if menu.bg.n<=7.8*6 then
			menu.bg.x+=1
			menu.bg.y+=1
		else
			menu.bg.x-=7.8*6
			menu.bg.y-=7.8*6
			menu.bg.n=0
		end
		
		menu.bg.z+=1
		if menu.bg.z>= 25 then
			if menu.bg.sp == 12 then
	 		menu.bg.sp=13
	 	else menu.bg.sp=12
	 	end
	 	menu.bg.z=0
	 end
	 
	 menu.bg.qn+=1
	 if menu.bg.qn>=7 then
	 	if menu.bg.q then
	 		menu.bg.qy+=1
	 	else
	 		menu.bg.qy-=1
	 	end
	 	if menu.bg.qm>=5 then
	 		menu.bg.q=not menu.bg.q
	 		menu.bg.qm=0
	 	end
	 	menu.bg.qn=0
	 	menu.bg.qm+=1
	 end
	 
	end
end
-->8
function open_path()
 local directions = {"down", "right", "left", "up"}
 for _, dir in ipairs(directions) do
 	local collided, col_x, col_y = collide_map(plr, dir, 5)
  if collided then
   local isdoublepath = false
   local adjacenttiles = {
    {x = col_x, y = col_y + 1}, -- below
    {x = col_x, y = col_y - 1}, -- above
    {x = col_x + 1, y = col_y}, -- right
    {x = col_x - 1, y = col_y}, -- left
   }
   for _, tile in ipairs(adjacenttiles) do
   	if fget(mget(tile.x, tile.y), 5) then -- check if adjacent tile also has a flag 5
     isdoublepath = true
     break
    end
   end
   
   if isdoublepath then
    if plr.keys >= 2 then
     plr.keys -= 2 -- use two keys for double paths
     sfx(0)
     sfx(7)
     do_shake(12,5)
     swap_tiles_double(col_x,col_y,0) -- calling appropriate function for double path
    else
     sfx(2) -- sound for not enough keys
    end
   else
    if plr.keys >= 1 then
     plr.keys -= 1 -- use one key for single paths
     sfx(0)
     sfx(7)
     do_shake(12,5)
     swap_tiles(col_x, col_y, 0)
    else
     sfx(2) -- sound for not enough keys
    end
   end
   break
  end
 end
end


function pick_up_key()
  local directions = {"down", "right", "left", "up"}
  for _, k in pairs(key.keys) do
    if not k.collected then
      for _, dir in ipairs(directions) do
        local collided, col_x, col_y = collide_map(plr, dir, key_flag) -- replace key_flag with actual flag for the key
        if collided and col_x == k.x and col_y == k.y then
          k.collected = true
          plr.keys += 1
          sfx(3)
          mset(col_x, col_y, 0)
          return -- exit the function once a key is picked up.
        end
      end
    end
  end
end



function swap_tiles(x, y, newtile)
    mset(x, y, 0)
    mset(x, y + 2, 61)
end

function swap_tiles_double(x, y)
    local right_tile = mget(x + 1, y)
    local left_tile = mget(x - 1, y)
    if right_tile == 45 then
        swap_tiles_r(x, y)
    elseif left_tile == 45 then
        swap_tiles_l(x, y)
end
end


function swap_tiles_r(x, y)
 mset(x  ,y,0)
 mset(x+1,y,0)
 mset(x-1,y,61)
 mset(x+2,y,61)
end

function swap_tiles_l(x, y)
 mset(x  ,y,0)
 mset(x-1,y,0)
 mset(x+1,y,61)
 mset(x-2,y,61)
end

function do_shake(duration, magnitude)
    shake.duration = duration
    shake.magnitude = magnitude
end

function check_shake()
	if shake.duration > 0 then
  cam_x = cam_x + rnd(shake.magnitude) - shake.magnitude / 2
  cam_y = cam_y + rnd(shake.magnitude) - shake.magnitude / 2
  shake.duration -= 1
 end
end

function talk()
	local directions = {"down", "right", "left", "up"}
 
 for _, dir in ipairs(directions) do
  local collided, col_x, col_y = collide_map(plr, dir, 5)
  if collided and mget(col_x, col_y)==6 then
  	sfx(1)
  end
 end
end




-->8
--menu screen & end screen

function draw_menu()
	for i=0,20 do
		for j=0,20 do
		 spr(27,menu.bg.x1+(i*8),menu.bg.y1+(j*8),1,1)
		end
	end
	for i=0,25,6 do
	 for j=0,25,6 do
	 	spr(menu.bg.sp,menu.bg.x+(i*8),menu.bg.y+(j*8),1,1)
	 end
	end
	for i=3,27,6 do
	 for j=3,27,6 do
	 	spr(44,menu.bg.x+(i*8),menu.bg.y+(j*8),1,1)
	 end
	end

	rectfill(18,15,106,48,4)
	rectfill(21,15,106,44,9)
	bigprint("raiot",23.8,17,4,10,4)
	--
	oprint("the parkour game",33,55,9)
	oprint("by daniil ivzhenko",29,65,10)
	oprint("press ❎ or 🅾️ to start",19,menu.bg.qy+24,12)
	--cats
	spr(30,1*8,6*8,2,2)
	spr(62,1*8,8*8,2,1)
	spr(30,13*8,6*8,2,2,true)
	spr(62,13*8,8*8,2,1,true)
end

--------------------------------

function draw_game()
  
  -- draw the background
  bg(cam_x * .2, cam_y * .2)  -- the 0.5 value will make the background move at half the speed
  draw_sky()
  
  --entities, map and camera
  camera(cam_x, cam_y)
  
  draw_sparkles()
  draw_snow()
  map(0, 0)
  draw_keys()
  draw_wzrds(
  spr(plr.sp,plr.x,plr.y,1,1,plr.flp)
)
  
  -- reset camera for ui or other static elements
  camera()
end


function bg(offset_x, offset_y)
  -- calculate the starting point for the tiles so that they align with the map
  local start_x = flr(offset_x / 32) * 32
  local start_y = flr(offset_y / 32) * 32

  for i = -5, 16*4 do
    for j = -5, 16*4 do
      -- position each sprite based on the loop index and the calculated start position
      local x = i * 32/4 + start_x - offset_x
      local y = j * 32/4 + start_y - offset_y
      
      spr(27, x, y, 1, 1)  -- scaled to 4x4 (32x32 pixels)
    end
  end
end

--------------------------------

function draw_end()
end

--------------------------------
--big text

function oprint(str,x,y,c,co) --outline print
 for xx=-1,1,1 do
  for yy=-1,1,1 do
   print(str,x+xx,y+yy,co)
  end
 end
 print(str,x,y,c)
end

function bigprint(str,x,y,c,co,scale)
 poke(0x5f54,0x60) -- screen is spritesheet. spr and sspr use screen as source
 oprint(str,x,y,c,co) -- outline print to desired location
 local x0 = x-1
 local y0 = y-1
 local w = #str*4 + 2
 local h = 7 -- only works on single line strings for now
 palt(0b1111111111111111) -- set all colors transparent
 palt(c,false) -- only draw the text and outline colors
 palt(co,false)
 sspr(x0,y0,w,h,x0,y0,w*scale,h*scale) -- stretch the text with desired scale
 palt()
 poke(0x5f54,0x00) -- set spritesheet back to source for spr
end
__gfx__
000000000044444000444440000444440004444400044444000444449004444400000000000000000000011111100000000b3200000b32000007c7000007c700
00000000009aaa90009aaa900aa99aa990a99aa99a099aa990a99aa90aa99aa9044444000444440000011d1dd1d1100000b3200000b32000007c7000007c7000
007007000973f7300973f730900ff73f0a0ff73f00aff73f0a0ff73f000ff73f09aaa90099aaa900001ddd1dd1ddd10003333200033332000676650006766504
0007700009fffff009ffeff0000ffffe000ffffe000ffffe000ffffe000ffffe973f7300973f7300001ddd1dd1ddd10053333335555555555667666555555555
000770000009900000999a000faaa0000faaa0000faaa0000faaa0000000aaa09ffeff000ffeff0001d1d11ee11d1d10555555500a497200555555540cfc7d04
00700700009aaa000f0aa0f0000a9000000a90000009a0000009a0000000990f00aaa9f000aaa9f001eeee1ee1eeee100a497200442422200cfc7d04ff2fddd0
000000000f0a90f0000a90000da0900000a900000d90a000009a0000000009500f09aa000f09a50001ee11111111ee104444222004442200ffffddd00fffdd00
0000000000d00d0000d00d000000d00000dd00000000d00000dd00000000009500009a9500009a50011116776771111004000200040002000f000d000f000d00
100001c0000011c0000000000c1100000c100001bbbbbbbbbbbbbbbbbbbbbbbb00bbbbbbbbbbbb0000000000100011110670067006700670000a00000a000000
000000000c0100000011cc00000010c0000000003bbb3bb33b3b3b3b3bb3b3b30bbbb3b33b3bbbb00000000000011111007006700670067000a9a0a0a9a00000
00000aa000000a0001c0000000a000000aa0000033b333b333333b33b3b3bbb3bb3b33355333b3bb0000000000111111007006700670060000a999aa99990000
9aaa900909aaa0a00c09aa000a0aaa909009aaa95b355535553b333bb3333b3bbbb3355555d33bbb0b00000001111111006006600600000000a444a444990a00
9090a00909a090900009a90009090a90900a09096b356555553b3353b35553bbbb3565d5557dd3bb0b0000b0111111100000066006000000a0aaa4a4aa99a000
0000099000000900000090c0009000000990000053555d556553b37335d55533b3357555d555533b00b00b0011111100000006000000000009aaa999aaa99990
00000000000010c0000001100c01000000000000555755755553b3655d675d53bbb3555755563bbb0030030b111110000000060000000000aaaaa222aaaa9000
000c10010c1100000c11c000000011c01001c000555d55555557365555775555bb355d555d5553bbb030300311110001000000000000000009a4aa2aa4a94440
0076700000bbbb0bb0bbbb000028e000565527ee555527eee272227227222000bb355555555553bb0000000000000000000c0c000d66777090a944944994a944
0007670003bbbb3003b0bb3070028e0055522e705d522672e72ee72ee27ee200b33565555d55533b0000000000000800000ccc00d6666667004999999994aa92
007666603b03bbbb3bb3bbbb0028888065d2ee0065d22eee6ee67ee677777007335555555d55553300000b0008008a80000ddc00dd66d0660004499994a4aa22
76666667bbbbbbb3bbbbbbb3288888825527e0005527ee70000000000000000055555556555655550b000b008a80080000007000d0000d0600a994444aa9aa40
07777777bbbbbb3bbbbbbbbb4222222255227600552276e7222722277222722055d556555d5555550b000300080b0b0b07076000d0dd06060aaaaaaaaa99aa90
a01785800b00b0330bbb0b3340d7efb055d2ee00d5d2ee2ee7ee727ee727e7eedd5555555567555503000300b000300300660000dd66d0d60aa944aaaa9aa940
9111555530bbbbb330bbb0b30dddffffd5d2e7e056d2e76e6e22e622e7e7ee00d5557655d75555dd0300b00b0b0b00b000067000dd666ddd04aaa94aaaaa9920
001000500bb3bbbb0bb3bb0b00d000f0555d227e555d2270000000000000000055555555555556550030303003030030000600000dddddd00044a94999a92200
0600d00660060006600600607028e000b0033373b3733373bb735555bb73d55507000700dd5dddddccccc000ccc00ccc000000000d6677700a92922669990000
060d0060d006000d6006006007028e00003bb73bb73bb73b376335d507b336557070000055555555cccc0000cccc00cc00000000d6666667a99a225dd6990000
0d0600d0060d00000d06d00d4028888000077bb76bb67bb6bbb33d5600bb3d5d0600000055655565ccc00000ccccc00c00000000dd66da6699aaa455dd6aa000
0d0600d00d0d00000200d00d22222222000000000000000007bb7355000b73550000000056765676ccc0c00c0cc0c00000000000da9aada649aaa9455dd9aa00
6000d0600d00d000292d00d040d7efb003373337333733377b6733550067336500000700766766670c0000cc00cccc0c00007000d9dd9696499aaa9455499a00
d000d0060000d000020200200dddf2ffbb6b737bb7bb737bb3bb3d5d00bb3d550000607067666666cc00ccc00000cc0070006000dd66d9d6249aa944449994a0
d000d00d000000000029229200ddfff000bbb6bb6b33b633b67b3d650b7b3d550000060066766676cccccc000000000060070070dd666ddd229994a2a2992a49
0600600d000000000002002000d000f000000000000000000733d555b633d55600700000777777770cc0c0000000c00c070607000dddddd00224429292442924
cccccccccccccccccccccccccccccccccccccccc00cccccccccccc00cc155555555551ccc1155555cc1c1155cc1565655556511c5565511c555611cc5555d555
1ccc1cc11c1c1c1c1cc1c1c1c1cc1cccccccccc10cccc1c11c1cccc0c11565555d55511cccc15555c1115765ccc15555551cc1cc555551cc5511c11c55557655
11c111c111111c11c1c1ccc1111111c11c1c11c1cc1c11155111c1cc115555555d555511cc155d55ccc11116cc155d5556711ccc5551111c567111cc55d55715
5c155515551c111cc1111c1c1c15551511ccc111ccc1155555d11ccc5555555655565555c1156555c1111cc1c1156665d75551cc711cc1ccd75551cc555651c6
6c156555551c1151c15551cc61156556651c1155cc1565d5557dd1cc55d556555d555555cc15557dcc1cc117cc15557d5556511c1cc1111c5666511c515551c5
51755d556551c17115d5551151756d5557711d55c1157555d555511cdd55555555675555ccc11765c1111555cc11176555d551cc61111ccc55d551cc1c111c11
556755555551c1655d675d515567655655651555ccc1555755561cccd5557655d75555ddcc1cc155cc155555c11c115555551ccc5675111c55551ccc1cc1ccc1
555d55555557165555775555555d5555555d5556cc155d555d5551cc5555555555555655c1156555c1155655cc1165555555511c5511c1cc565651cccccccccc
555555555555555d555556655555555500dddddddddddd00ddddd00d555655555d5555555555d555555d55555555d5550000000000000000000000005555d555
5555d555556555555565555555d557550dd7d776677d7dd06677dddd55555555575d5dd555557655556755555555765500000000000000000000000065567655
55d555555555555555555555555555550d776776677677d076776776555565655565555555d5571551755d5555d557150000000000000c000000000055d65715
55555556556655755d5555755d555555dd776777777677dd767767775655557555756555555651c66c156555555651c6000000000c000c000c00000065565116
55d57555d666655555555577555555d5d67767777776776d767767775555555555555555515551c55c155515515551c50c000c000c000c000c0000c0515551c1
55555555dd6665655555576555575555d67766766766776d767766761155d555655555111c111c1111c111c11c111c11c000c00c0c00cc0000c00c001c111111
566555555dddd55555577655575d5555d67776766767776d66777676c1155d555d55511c1cc1ccc11ccc1cc11cc1ccc10c0c00c00c00c00c00c00c0cccc1cc1c
5555555d555555555655755d55555555d77776766767777d67777676cc155dd55d5551cccccccccccccccccccccccccc0c0c00c00cc0c0ccc0c0c00ccccccccc
666777666667776666677766666777666667777667777666d7776776677767766776776d67776776677767767007000700000000000000000000000000000000
77666667776666670706660767665605776666d00d666677dd77677666776776677677d660076706607767760760007600000000000000000000020000000000
7777777777777777007777700077770677777100001777770d776776767767766776777676006006700767060007770002000000000000070200292000000080
7666667776666677706066077006666776d1000000001d67dd776777767767777776776676700077767060076760707629200020000000602920020008000488
667776666677766666077666666776666d100000000001d6d6776777767767777776766d76700777767006770070707002c0029200000770020c0c0348800060
ddddddddddddddddddddddddddddddddd10000000000001dd677667666776676676676d066770676667760000767070000c00c2000007707c000c00c06000660
00d666000000000000000000000000000000000000000000d677767666777676676776d066700676667770760707677003c03c0c000760600c0c00c000600600
00d666000000000000000000000000000000000000000000d777767667777676676776dd67777676677776766000700700c0c00c007070070c0c00c000606000
00d6660000d6760000d6500000d6770000d76700d1dddd100000050000500000bbbbbbbbbbbbbbbb3bbbbbbbbbbbb3bbbbbb3bbb00767000c155557555d551cc
00d6760000d6770000d5000000d6760000d76700d1dddd1d00005d0000d5000073b63b6763b3bb3633633b737363bb3b63b333b600076700cc15d55575551ccc
00d6670000d770000050050000d66d0000d6670011dddd1d0005d600006d5000773b3777777b733703b73b777773b33b773b733700766660c115555d5557511c
00d7770000d70700000056000066d500005d6700d1dddd1d000d66000066d000766b66377666637703b03b6776d3b3b3333b63b377777777cc1167555d5651cc
00d6770000d67700005557000066d000000d6600d1e1ee1e005d66000066d500667776666677766603b03bd66d33b003663b7336a0178580ccc1551555511ccc
00d6760000d0760000666700006d50000005d600e1e11e1e00d66d0000d66d00dddddddddddddddd00b003bdd103b003dd3bbd3d91115255cc1c11c15111c1cc
00d6770000d6070000d7670000d5000000005d001116611100676d0000d6760000d666000000000000b003b00003b0000003b030001155500cccc1cc1c1cccc0
00d7760000d7760000d0660000500000000005007676677700776d0000d6770000d6660000000000000000b000030000000300300010005000cccccccccccc00
0505c483d6e2c4000073c4000006e705c4000000b1b1b1b100e775858464000000005434440464c50000b100000000000000000000c6fb05dddddddddddddddd
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d544444dd566466d
0505843464e3c4004363f70000000005c4000000b1b1b1b10047e7f727f700b10000e7a5751584640000b100000000fb00effcfbec54eb05d546464dd566466d
0000610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d546464dd544444d
b595a5b58474c4d5000707000000a405d4000000b1b1b1b100001303370300b1000007d6e795a5f700b1b100000054ebebebebebeb740535d546464dd566466d
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d546464dd556466d
575757b0e7a58464c54707000600b405c40000b1b1b1b1b1000000230013b1b1000006264603130000b1b1000056e7a57535150505153505d546464ddd55555d
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d544444d44444444
861383271303e775640037000000e775d40000b1b1b1b100000000000000b1000000370000230000b1b1b10000000000e795050505050505d544aa9d77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d544444d66766676
6500b217b11300a4e4d50000000000b4e40000b1b1b100b1b10000000000b1000000000000b1b1b1b1b1000000000000d6b6e77505050505d546464d67666666
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d546464d76676667
716161b7b1b183e77564c60000008373e40000b1b1b1b100b1b1b1b1b1b1b10000b1b1b1b1b1b1b1b1b1b1007700a706b6b613b405050505d546464d56765676
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d554444d55655565
3585f783b1b10003a484428300436305c4000000b100b100b1b100b1b1b1b1b1b1b1b1b1b10000000000000007000007b60000e775050505d555555d55555555
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dddddddddd5ddddd
35c4c500b1b15606e775527200836305d4000000b1b1b1b1b1b1b1b1b1b1b1b1b1000000000000000000000027d6b60700000003b40505050007767777767000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000766676776666770
358464b1f6b1b1b113e7f7d2d5f6a485f7000000b1b1b1b1b1b1b10000b1b1000000000000c5f6005687b70007b6b62700000003e77505057666766666766667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007667667667667677
3535c42646b1b1b100030000540474c40300b1b1b1b100b1b1b1b10000b100000000e5e5fc541464e507000017b6001700b1001303e77505d676575676676675
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd6555566566565d
3585f7b1b1b1b1b1b11300b1a41585f70300b1b1b1b1b1b1b1b100000000b10000d5541444740515640700002700004700b1b1b12303b4050dd5555555655dd0
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ddd555dddd000
3585130000b100b1b1b10000e7a5f7001300b1b100b1b1b1b1b1b100b1b1b1000054740585959505d427000007000000b1b1b1f6b113e775aaa999a900000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000499a999a00000000
35c43646b1b1b1b1b1b1b100000000000000b1b1b1b100b1b1b1b1b1b100000000a4051564e65405d417d6b607000000b100a0575757b0a49449949900000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004499449900000000
85f7b1b1b1b1b1b1b100e5c50000000000b1b100b1b100005687b1b10000000000e7752584447485f70700b637000000b10017d655b117945494594400000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d54555450a000a00
d413b10000b1b1b1e6541464b100000000b1b1b1b100000000070000000000000023e7a595a595f700370000000000b1b1b1a706878706a455555d5d0090090a
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055d5555500400400
e4000000b1b1b1b1544273d4b1b1b1b1b1b1b1b1b1000000a787c787160646000000031313230300000000000000b1b1b1b1b117832707b40000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666000000000
c4e60000b1b1b1b1e7a595f7b1b1b100b1b1b1b100b1000000670007003700000000130000001300b1b1000000b1b1b1b1b1b127000754740677770700000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006007007600202002
84640000b100b1b1b11313b1b1b100b1b1b1b1b1b1b100000027001700670000b100b1b1b1b1b1b1b1b1b1b1b1b100b1b1b100070056b4056777777620020020
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006707776602222220
05c40000b100b1b1b100b1b1b100b1b1b1b1b1b100000000560616871687b70000b1b1b1b1b1b1000000b1b1b100b1b100b1b1170000b405067777602288ee22
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000676760002288820
05c40000b1000000b1b1b1b1b1b100b1b1b1b10000000000000700070007000000b1b1b1b1b1b1b1b1b1b100b1b1b100b1b1002700ecb405049a0000049a0007
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049a0070049a070
05c4d500b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b10000a7871687c706464700b1b1b100000000000000b1b1000000000000000047005474050499990004999905
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009999994444444444
2584640000b1b1b1b1b1b1b1b1b100b1b1b1b1b1b100001700070007000000b10000000000f6000000b1b1000000a057575757b000b40505444444450d73fb05
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d73fb05dddfeff0
3505c400000000b1b1b1b1b100b1b1b100000000000000070017f627007700000000a0575757b00000b1b1000000f6664686b60700b40515dddffff00ddfff00
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000f000d000f00
3535c400000000b1b1b1b10000b1b1b1000000a78726c70616061697c706000000a05757575757b000b1b1000056167616a6160616b435050aa999a94494a994
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000499a999a00a99a90
05058464000000b1b1b1b100b1b1b1b100000000070000a0575757b00027000000275666468646170000b10000000066d66600275474353594499499000a9000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004499449900000000
353505c4d500000000b1b1b100b1b1000000000087971666b66696860007000000070066c6860047f60000000000567665451606a4253505d494594400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d4d554500000000
353525846400000000b1b1b1b1b10000000000002700d6666586e666d5170000001745764586b6a0575757b0000000669646d55474352505000ddd5d00000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd500000000
15350535d40000000000000000b10000000087c706d5544474358444640700000017664656860007c566001777fc676646675435153535050000000000009000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
35050535846400e50000000000c50000069787f6544474250515053584640006260686d6b607c50745765586062606466707740525353535000000000000a000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000
052535353584240464d500e65444042404042404740535153505353525844404440444748404440444047484044404147444050535353515000aa00000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa900000000000
050505350515053584143444740515053505352505150505350515050535051505150515051505150515050515051515353535351505050500a99a900000a000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004494a99400000000
__label__
15151115151551155555555511151115555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
15151555151515555155d555155515155555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d555
11d511551115111555d555551115151555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d55555
15151556551555165155555655151516555555565555555655555556555555565555555655555556555555565555555655555556555555565555555655555556
151511151115115555d575551115111555d5755555d5755555d5755555d5755555d5755555d5755555d5755555d5755555d5755555d5755555d5755555d57555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
56655555566555555665555556655555566555555665555556655555566555555665555556655555566555555665555556655555566555555665555556655555
5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d
5555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d5555555d555
55557655555576555555765555557655555576555555765555557655555576555555765555557655555576555555765555557655555576555555765555557655
55d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d5571555d55715
555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6555651c6
515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5515551c5
1c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c111c11
1cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc11cc1ccc1
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
111dd11ddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5dddddcc156565555527ee272221106116116061161116bb735555
15551555555555555555555555555555555555555555555555555555555555555555555555555555ccc155555d522672e27ee20061161160d116110d376335d5
11651565556555655565556555655565556555655565556555655565556555655565556555655565cc155d5565d22eee777770071d16d00d161d1000bbb33d56
16761616567656765676567656765676567656765676567656765676567656765676567656765676c11566655527ee71111100011211d00d1d1d000117bb7355
16671117766766677667666776676667766766677667666776676667766766677667666776676667cc15557d552276e772227221292d11d11d00d1117b673355
67666666676666666766666667666666676666666766666667666666676666666766666667666666cc111765d5d2ee2ee727e7ee020211210001d111b3bb3d5d
66766676667666766676667666766676667666766676667666766676667666766676667666766676c11c115556d2e76ee7e7ee110029229200111111b67b3d65
77777777777777777777777777777777777777777777777777777777777777777777777777777777cc116555555d22710111111101121121011111110733d555
111111101671167011111110111c1c1016711670171111111117c711167116701671167011444440cc155555565527ee1111111011111110b1133373bb735555
171111001771167017111100171ccc007671167077711111117c71111171167016711670179aaa90c115655555522e701111110011111100113bb73b376335d5
617110006171167061711000617ddc0066711600667111111676651411711670667116006973f7301155555565d2ee001111108011111c0011177bb7bbb33d56
16110001166106611611000116117001161100011611111155555555116106611611000119fffff1555555565527e001181104881c110c011111000117bb7355
1000117110001661100071711707617116001771100071111cfc7d1411001661160011711009917155d5565555227611488011611c001c11133733377b673355
070117110701161177016711076617110701677177016111ff2fddd11101161107011711079aaa11dd55555555d2ee11060116610c01cc11bb6b737bb3bb3d5d
0011717100117671601771710016717100117671601711711fffdd1111117671001171710f1a91f1d5557655d5d2e7e1006116110c11c11c00bbb6bbb67b3d65
0111161101111611071617110116161101711611077617111f111d11111116110111161101d11d1155555555555d227e016161110cc1c1cc011111110733d555
7777777777777777777777777777777777777777777777777777777777777777777777777777777755565555555551cccccccccccccccccccccccc1011cccccc
66766676667666766676667666766676667666766676667666766676667666766676667666766676555555555d55511c1ccc1cc1ccccccc11c1cccc01cccc1c1
67666666676666666766666667666666676666666766666667666666676666666766666667666666555565655d55551111c111c11c1c11c15111c1cccc1c1115
7667666776676667766766677667666776676667766766677667666776676667766766677667666756555575555655555c15551511ccc11155d11cccccc11555
56765676567656765676567656765676567656765676567656765676567656765676567656765676555555555d5555556c156555651c1155557dd1cccc1565d5
556555655565556555655565556555655565556555655565556555655565556555655565556555651155d5555567555551755d5557711d55d555511cc1157555
55555555555555555555555555555555555555555555555555555555555555555555555555555555c1155d55d75555dd556755555565155555561cccccc15557
dd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5ddddddd5dddddcc155dd555555655555d5555555d55565d5551cccc155d55
1d6677701111111016711670167116701111111116711670167116701111111011cccccccccccccccc155555565527eeb1133373bb735555555551cccc155555
d6666667111111001671167011711670111111111171167016711670111111001cccc1c1c1cc1cccc115655555522e70113bb73b376335d55d55511cc1156555
dd66da6611111000167116001171167011111111117116701671160011111000cc1c1115111111c11155555565d2ee0011177bb7bbb33d565d55551111555555
da9aada611110001161100011161066111111111116106611611000111110001ccc115551c155515555555565527e0011111000117bb73555556555555555556
d9dd969610001111160011111000166111111111100016611600111110001111cc1565d56115655655d5565555227611133733377b6733555d55555555d55655
dd66d9d600011111000111110001161111111111000116110001111100011111c115755551756d55dd55555555d2ee11bb6b737bb3bb3d5d55675555dd555555
dd666ddd00111111001111110011161111111111001116110011111100111111ccc1555755676556d5557655d5d2e7e100bbb6bbb67b3d65d75555ddd5557655
0dddddd101111111011111110111111111111111011111110111111101111111cc155d55555d555555555555555d227e011111110733d5555555565555555555
1671167011111110111111101111111111111110111111111111111011111111611611161611d1161611d1166116111611111111b1133373bb73555555555555
1671167011111100111111001111111111111100111111111111110011111111d116110d161d1160161d1160d116110d11111111113bb73b376335d55555d555
1671160011111000111110001111111111111000111111111111100011111111161d10001d1610d01d1610d0161d10001111111111177bb7bbb33d5655d55555
16110001111100011111000111111111111100011111111111110001111111111d1d00011d1600d11d1600d11d1d0001111111111111000117bb735555555556
16001111100011111000111111111111100011111111111110001111111111111d00d1116000d1616000d1611d00d11111111111133733377b67335555d57555
00011111000111110001111111111111000111111111111100011111111111110001d111d001d116d001d1160001d11111111111bb6b737bb3bb3d5d55555555
001111110011111100111111111111110011111111111111001111111111111100111111d011d11dd011d11d001111111111111100bbb6bbb67b3d6556655555
0111111101111111011111111111111101111111111111110111111111111111011111110611611d0611611d0111111111111111011111110733d5555555555d
111111101111111011111110111111101111111011111110111111111111111111111111611611166116111617111710111111101711171061161116bb73d555
111111001111110011111100111111001111110011111100111111111111111111111111d116110dd116110d717111001111110071711100d116110d17b33655
111110001111100011111000111110001111100011111000111111111111111111111111161d1000161d1000161110001111100016111000161d100011bb3d5d
1111000111110001111100011111000111110001111100011111111111111111111111111d1d00011d1d00011111000111110001111100011d1d0001111b7355
1000111110001111100071111000711110001111100011111111111111111111111111111d00d1111d00d1111000171110001111100017111d00d11110673365
0001111100011111700161117001611100011111000111111111111111111111111111110001d1110001d1110001617100011111000161710001d11100bb3d55
0011111100111111601711716017117100111111001111111111111111111111111111110011111100111111001116110011111100111611001111110b7b3d55
011111110111111107161711071617110111111101111111111111111111111111111111011111110111111101711111011111110171111101111111b633d556
111111101117767777777777777671101111111011111110111111101111111011cccccc555527eee2722272272221101111111011111111b1133373bb735555
11111100176667676676667676666770111111001111110011111100111111001cccc1c15d522672e72ee72ee27ee2001111110011111111113bb73b376335d5
1111100076667666676666666676666711111000111110001111100011111000cc1c111565d22eee6ee67ee677777007111110001111111111177bb7bbb33d56
1111000176676676766766676766767711110001111100011111000111110001ccc115555527ee71111100011111000111110001111111111111000117bb7355
10001111d6765756567656767667667510001111100011111000111110001111cc1565d5552276e722272227722272211000111111111111133733377b673355
00011111dd655556556555656566565d00011111000111110001111100011111c1157555d5d2ee2ee7ee727ee727e7ee0001111111111111bb6b737bb3bb3d5d
001111110dd555555555555555655dd100111111001111110011111100111111ccc1555756d2e76e6e22e622e7e7ee11001111111111111100bbb6bbb67b3d65
01111111011ddd55dd5ddddd5dddd11101111111011111110111111101111111cc155d55555d227101111111011111110111111111111111011111110733d555
1111111011111110167116701671167011111110111111101111111111111110c115555555555555565527ee11111110111e821117111710bb73d55555555555
1111110011111100117116701671167011111100111111001111111111111100ccc155555555d55555522e701111110011e821177171110017b336555555d555
1111100011111000117116701671160011111000111110001111111111111000cc155d5555d5555565d2ee0011111080188882111611100011bb3d5d55d55555
1111000111110001116106611611000111110001111100011111111111110001c1156555555555565527e001181104882888888211110001111b735555555556
1000111110001111100016611600111110001111100011111111111110001111cc15557d55d57555552276114880116122222224100017111067336555d57555
0001111100011111000116110001111100011111000111111111111100011111ccc117655555555555d2ee11060116611bfe7d140001617100bb3d5555555555
0011111100111111001116110011111100111111001111111111111100111111cc1cc15556655555d5d2e7e100611611ffffddd1001116110b7b3d5556655555
0111111101111111011111110111111101111111011111111111111101111111c11565555555555d555d227e016161111f111d1101711111b633d5565555555d
1111111011111110111111101111111011111110111115101111111011111110c1555575555655555555555555555665555553bbbbbbbbbb555555555555555d
111111001111110011111100111111001111110011115d001111110011111100cc15d555555555555555d555556555555d55533b3bbb3bb35555d55555655555
11111000111110001111100011111000111110001115d6001111100011111000c115555d5555656555d55555555555555d55553333b333b355d5555555555555
1111000111110001111100011111000111110001111d66011111000111110001cc11675556555575555555565d555575555655555b3555355555555655665575
1000111110001111100011111000111110001111105d66111000111110001111ccc155155555555555d57555555555775d5555556b35655555d57555d6666555
000111110001111100011111000111110001111100d66d110001111100011111cc1c11c11155d55555555555555557655567555553555d5555555555dd666565
001111110011111100111111001111110011111100676d1100111111001111110cccc1ccc1155d555665555555577655d75555dd55575575566555555dddd555
011111110111111101111111011111110111111101776d11011111110111111101cccccccc155dd55555555d5655755d55555655555d55555555555d55555555
111111111111111111111110111111101111111011d67610111111101111111011111110cc1565655555555d5555555d55555555555555555555566555555555
111111111111111111111100111111001111110011d67700111111001111110011111100ccc1555555655555556555555555d5555555d555556555555555d555
111111111111111111111000111110001111100011d77000111110001111100011111000cc155d55555555555555555555d5555555d555555555555555d55555
111111111111111111110001111100011111000111d70701111100011111000111110001c1156665556655755566557555555556555555565d55557555555556
111111111111111110001111100011111000111110d67711100011111000111110001111cc15557dd6666555d666655555d5755555d575555555557755d57555
111111111111111100011111000111110001111100d17611000111110001111100011111cc111765dd666565dd66656555555555555555555555576555555555
111111111111111100111111001111110011111100d61711001111110011111100111111c11c11555dddd5555dddd55556655555566555555557765556655555
111111111111111101111111011111110111111101d77611011111110111111101111111cc11655555555555555555555555555d5555555d5655755d5555555d
111111101111111011111110111111101111111011177677777671101111111111111111c15555755555d5555555d555555d55555555d5555556555555555555
111111001111110011111100111111001111110017666767766667701111111111111111cc15d55555557655555576555567555555557655555555555555d555
111110001111100011111000111110001111100076667666667666671111111111111111c115555d55d5571555d5571551755d5555d557155555656555d55555
111100011111000111110001111100011111000176676676676676771111111111111111cc116755555651c6555651c66c156555555651c65655557555555556
1000111110001111100011111000111110001111d6765756766766751111111111111111ccc15515515551c5515551c55c155515515551c55555555555d57555
0001111100011111000111110001111100011111dd6555566566565d1111111111111111cc1c11c11c111c111c111c1111c111c11c111c111155d55555555555
00111111001111110011111100111111001111110dd5555555655dd111111111111111110cccc1cc1cc1ccc11cc1ccc11ccc1cc11cc1ccc1c1155d5556655555
0111111101111111011111110111111101111111011ddd555dddd111111111111111111101cccccccccccccccccccccccccccccccccccccccc155dd55555555d
1111111011111110111111101111111011111110c155557555d551cc1111111111ccccccccccccccaaa999a9aaa999a9aaa999a9aaa999a9cc1c115555555555
1111110011111100111111001111110011111100cc15d55575551ccc111111111cccc1c1ccccccc1499a999a499a999a499a999a499a999ac11157655555d555
1111100011111000111110001111100011111000c115555d5557511c11111111cc1c11151c1c11c194499499944994999449949994499499ccc1111655d55555
1111000111110001111100011111000111110001cc1167555d5651cc11111111ccc1155511ccc11144994499449944994499449944994499c1111cc155555556
1000111110001111100011111000111110001111ccc1551555511ccc11111111cc1565d5651c115554945944549459445494594454945944cc1cc11755d57555
0001111100011111000111110001111100011111cc1c11c15111c1cc11111111c115755557711d55d5455545d5455545d5455545d5455545c111155555555555
00111111001111110011111100111111001111110cccc1cc1c1cccc111111111ccc155575565155555555d5d55555d5d55555d5d55555d5dcc15555556655555
011111110111111101111111011111110111111101cccccccccccc1111111111cc155d55555d555655d5555555d5555555d5555555d55555c11556555555555d
11111110111111101111111011111110111111101111111011d6771011111111cc1565651111111011111110111111104494a994677776665555555555555555
11111100111111001111110011111100111111001111110011d6760011111111ccc1555511111100111111001111110011a99a901d6666775555d5555555d555
11111000111110001111100011111000111110001111100011d66d0011111111cc155d55111110001111100011111000111a90001117777755d5555555d55555
1111000111110001111100011111000111110001111100011166d50111111111c11566651111000111110001111100011111000111111d675555555655555556
1000111110001111100011111000111110001111100011111066d11111111111cc15557d10001111100011111000111110001111100011d655d5755555d57555
000111110001111100011111000111110001111100011111006d511111111111cc111765000111110001111100011111000111110001111d5555555555555555
00111111001111110011111100111111001111110011111100d5111111111111c11c11550011111100111111001111110011a111001111115665555556655555
0111111101111111011111110111111101111111011111110151111111111111cc11655501111111011111110111111101111111011111115555555d5555555d
1111111011111110111111101111111011111111111c1c101111111011cccccccc15555511111110149a11171111111011119110111111104494a99455555555
1111110011111100111111001111110011111111111ccc00111111001cccc1c1c1156555111111001149a17011111100111111001111110011a99a905555d555
1111100011111000111110001111100011111111111ddc0011111000cc1c1115115555551111100014999905111110001111a00011111000111a900055d55555
11110001111100011111000111110001111111111111700111110001ccc1155555555556111100014444444411110001111a0001111100011111000155555556
10001111100011111000111110001111111111111707611110007111cc1565d555d55655100011111d73fb1510001111100aa111100011111000a11155d57555
00011111000111110001111100011111111111110066111170016111c1157555dd5555550a011a11dddfeff10a011a1100aa9111000111110001111155555555
00111111001111110011111100111111111111110016711160171171ccc15557d55576550091191a0ddfff110091191a00a99a91001111110011911156655555
01111111011111110111111101111111111111110116111107161711cc155d5555555555014114110d111f11014114114494a99491111111011111115555555d

__gff__
0000000000000000000001014040404013131313130303030303000000000303400101400303010103030000002303030000004001010303000700000003030303030303030303030303030303030303030303030000000303030303000000030101010101010000000000000000000000000000000100000101010101400303
03030300000000000000000000000000000000000000000000000000000000070000000000000000000000000000070700000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000404000000000000000000000000000000b0000000000000000000000000000000808
__map__
1a382a00000000003800000000002a000000003800000038002a001a7a786179786179787b38380000000000003a0000006d545664565050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22002200003800001e1f0038000022001a003800003800212122222222222200703800701a00000000000000003a000000787c7b61565655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
21002100380000002e2f38000038221a2200381a0038007a7879617879787b38701a007022381a0000000000003a0000007474746b74746b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
782b787b0000382a3e3f2a1a2b00222222380022001e1f1a5456675667552b38702100607b00220000000000003a0000767600006d6b006b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1719701a2a0000181616151619007a787b000021002e2f21568f568e56567b00702238700038210000000000003a00005419767676776e45000000000000000000000000000000000000000000000000000015151515151515151515151515151515151500000000000000000000000000000000000000000000000000000000
502915171900007e595957502915151515190078003e3f7a6656569e56680000607b00700000780000000000003a00007e29154142444447000000000000000000000000000000000000000000000000000050505050505050505050505050505050501500000000000000000000000000000000000000000000000000000000
525150504c3b3b3b3b3b7e575050515050291515151515171515151515151515151515151515151515151515151515151515285050505050000000000000000000000000000000000000000000000000000050505050505050505050505050505050505000000000000000000000000000000000000000000000000000000000
5050535048461b1b001b1b7e5b59575150505150505150515050505050505050505050505050505050505050505050505050505050505050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
51505350524d1b1b1b1b1b1b0000495050585959595959595959595959595959595959595959595959595959595959595959595959595959000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5a5753585a7f640000001b1b1b1b7e57504c39393939393939393939393939393939393939393939393939393939393939394b2527323136000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
307e574c0000001b1b001b1b1b1b1b4a504d1c1c001c1b1c00001c1c1c00001c1c1c001b1d1c1c1d2d1c3c2c1d3c001c1d0047246f5d3436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3231494842404040460000001b1b0049504e001b000000ae9f9f9faf1b001b001b000000001b3cae9f9f9f9f9f9f9f9f9f9f574840444645000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
38387e39393939393900001b1b1b4547587f1b00001baeaf0000001b1b0000003c2c3c000000ae9faf001d1c1b1c1d004543472434364847000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5e5e7d7000700070000000001b1b49504d310000ae9faf1b1b1b1b1b1b1b1b1bae9f9faf1b1b721c1d00001b001b001b313030311b343650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040429f9f9f9f9f9f1b1b001b1b4b587f00000000001b0000000000001b00001c1c0000001b730000003c3c00001b1b1b31313800383137000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57505058595a595a7f1b0000001b494d61641b1b00001b00001b1b001b001b1b1b1b1b00ae9faf1b00ae9faf0000000045252627001b3436000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3750504c0000001b1b1b00001b45504e000000005e5d00000000001b1b001b1b1b000000711d1c0000001c1d00001b004950246f1b383750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3650504c001b1b1b1b1b1b1b4550587f2d2d459f9f9f641b1b1b1b1b1b1b1b1b1b1b1b0074001b0000000000007600007e57505229155051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3750504c00001b004542404047587f30001b7e5a574c1b1b1b1b1b1b1b1b1b1b1b1b1bce3c2c1b001b1b000000710000004b515150505250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2850507f000045404758595a5b7f62797b1b0038364c00000000000000000000000000ae9faf00000000000000aeaf1b1b7e5b5b5a595753000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50504c3100003750587f00313200000000000034364c0000ae9faf0000000000000000323031767700000000007e7f1b4544bebebebe4a50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
505024000034365125273800005c5d0000003800374c000031323100000000000000000031007070000000000000731b4befef00ef655350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050252700003750240000003436434600005d5c454c00000000000000000000000000000000aeaf000000001b2c3c4547bf00bffe00ef53000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50504c0000003650466f006f4551587f2d2d4543474c00000000000000000000006e7700000074720000001b009f4147bebebebe64000065000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50502400003435364843434347587f0000005050587f0000000000000000000000454600000000730000001b004a51587fef00ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
505024003800007e57505150587f0000005050504c0000000000000000005e5d007e7f00000000000000001b1b49587f1b000000000000bf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050252700000038375050504d000000005050587f000000007600007700454676307100001b000000001b1b1b4a4c0000001b000000febe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050240000003435365051524c0000005050587f000000000070000070007e7f70317000001b1b1b001b1b001b494d001b001bfe0000eebe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050250000000000375050587f00005050587f00000000007a60000070000031720072000000001b1b1b001b1b7e7f641b0000ee00000051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50502438000000343651587f00000050504c0000001b1b0000787961780000007100700000000000001b1b001b00001b0000000000000053000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50502526275e5d007e574c0000005050504c00001b1b1b0000705c5d70000000740073000000000000001b001b0000000000bfbf00000053000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050252700454600004a4e0000005050507f00001b1b1b0000454243460000000000765e005d000000001b1b1b0000000000eebe00000052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00060000027400f4400b0400f0400b7401c44016440194401b4401c4401d4401d74020040200401e0401d040187402344016740137401474029440177401a740207402e0403c440380403a0403b7403c7403c740
0006000002740023100a0300c0400d0500e05010060120501405015050180501a0501b0701e0501f01021050220101f0501d0501b050180501801018050190501c0501f05023040270102c010320303901039050
000100001477012770127701277011770107700f7500f7500f7500e7500d7500c7500c7500c7500d7500d7500c7500b7500a7500a7500975009750097500a7500a75009750087500875007750067500675005750
100500003007000000350703507035070350603505035050350303501000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
090500002d63000600006002061023600006000060000600006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0210000000600386403865036650326402d640256601f6601b65018600176201663015650146601565021640166401764018640196401a6401b6501d6501e65020650216501f6501e65022650006000060000600
030500001165000000000000000000000000000000017650000000000000000000000000000000000000000000000216500000000000000000000034650000000000015650000000000000000000000000000000
8e0200001c6501f6502166022660216601d6601a660196701867017670176701a6601e6602165022650226501f6501b6501765016650176401b6401f63022630216301d6201a62018610186101e6102161022610
4e0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
